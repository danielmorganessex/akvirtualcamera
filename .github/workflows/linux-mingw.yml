name: Linux MinGW

on: [push, pull_request]

env:
  QTIFWVER: 4.1.1
  NSIS_VERSION: 3.08
  DOCKERIMG: archlinux:latest
  ARCH_ROOT_URL: https://mirror.rackspace.com/archlinux
  NJOBS: 4

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 10
      fail-fast: false
      matrix:
       include:
         - compiler: gcc
         - compiler: clang
    steps:
    - uses: actions/checkout@v2
    - name: Release build
      uses: addnab/docker-run-action@v3
      if: ${{ startsWith(github.ref, 'refs/tags/') }}
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        registry: gcr.io
        image: ${{ env.DOCKERIMG }}
        options: >-
          -v ${{ github.workspace }}:/sources
          -e NSIS_VERSION=${{ env.NSIS_VERSION }}
          -e TARGET_ARCH=${{ matrix.target_arch }}
          -e COMPILER=${{ matrix.compiler }}
          -e DOCKERIMG=${{ env.DOCKERIMG }}
          -e ARCH_ROOT_URL=${{ env.ARCH_ROOT_URL }}
          -e NJOBS=${{ env.NJOBS }}
        run: |
          cd /sources
          echo
          echo Install dependencies
          echo
          chmod +x ports/ci/linux-mingw/install_deps.sh
          ./ports/ci/linux-mingw/install_deps.sh
          echo
          echo Release Build
          echo
          chmod +x ports/ci/linux-mingw/build.sh
          ./ports/ci/linux-mingw/build.sh
          echo
          echo Release Deploy
          echo
          chmod +x ports/ci/linux-mingw/deploy.sh
          ./ports/ci/linux-mingw/deploy.sh
    - name: Daily build
      uses: addnab/docker-run-action@v3
      if: ${{ !startsWith(github.ref, 'refs/tags/') }}
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        registry: gcr.io
        image: ${{ env.DOCKERIMG }}
        options: >-
          -v ${{ github.workspace }}:/sources
          -e NSIS_VERSION=${{ env.NSIS_VERSION }}
          -e TARGET_ARCH=${{ matrix.target_arch }}
          -e COMPILER=${{ matrix.compiler }}
          -e DOCKERIMG=${{ env.DOCKERIMG }}
          -e ARCH_ROOT_URL=${{ env.ARCH_ROOT_URL }}
          -e NJOBS=${{ env.NJOBS }}
          -e DAILY_BUILD=1
        run: |
          cd /sources
          echo
          echo Install dependencies
          echo
          chmod +x ports/ci/linux-mingw/install_deps.sh
          ./ports/ci/linux-mingw/install_deps.sh
          echo
          echo Daily Build
          echo
          chmod +x ports/ci/linux-mingw/build.sh
          ./ports/ci/linux-mingw/build.sh
          echo
          echo Daily Deploy
          echo
          chmod +x ports/ci/linux-mingw/deploy.sh
          ./ports/ci/linux-mingw/deploy.sh
    - name: Release Upload
      uses: softprops/action-gh-release@v0.1.6
      if: ${{ startsWith(github.ref, 'refs/tags/') }}
      with:
        files: packages/windows-gcc/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Daily Build Upload
      uses: softprops/action-gh-release@v0.1.6
      if: ${{ !startsWith(github.ref, 'refs/tags/') }}
      with:
        body: "${{ github.event.head_commit.message }} (commit: ${{ github.sha }})"
        prerelease: true
        files: packages/windows-gcc/*
        name: Daily Build
        tag_name: daily-build
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
